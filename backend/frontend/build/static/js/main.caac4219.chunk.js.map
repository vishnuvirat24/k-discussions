{"version":3,"sources":["constants/discussionConstants.js","constants/userConstants.js","store.js","reducers/discussionReducer.js","reducers/userReducer.js","components/Footer.js","components/Header.js","actions/userAction.js","components/Discussions.js","components/Loader.js","Screens/DiscussionScreen.js","actions/discussionAction.js","components/Message.js","Screens/ReplyScreen.js","components/FormContainer.js","Screens/CreateScreen.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","App.js","reportWebVitals.js","index.js"],"names":["DISCUSSION_LIST_REQUEST","DISCUSSION_LIST_SUCCESS","DISCUSSION_LIST_FAIL","DISCUSSION_CREATE_REQUEST","DISCUSSION_CREATE_SUCCESS","DISCUSSION_CREATE_FAIL","DISCUSSION_CREATE_RESET","D_LIST_REQUEST","D_LIST_SUCCESS","D_LIST_FAIL","D_LIST_RESET","D_REPLY_REQUEST","D_REPLY_SUCCESS","D_REPLY_FAIL","D_REPLY_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","reducer","combineReducers","discussionList","state","discussions","action","type","loading","payload","error","discussionCreate","success","userRegister","userLogin","userInfo","dList","d","dReply","middleware","thunk","initialState","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","Header","useSelector","dispatch","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","username","Item","onClick","removeItem","Link","Discussions","Card","style","color","Badge","pill","variant","name","Body","Title","Text","description","_id","Loader","Spinner","animation","role","height","width","margin","display","DiscussionScreen","history","useEffect","a","axios","get","data","response","detail","message","Button","size","push","ListGroup","map","Message","children","Alert","ReplyScreen","match","useState","comment","setComment","replySuccess","params","replies","reply","class","replier","Form","onSubmit","e","preventDefault","post","Group","controlId","Label","Control","as","row","value","onChange","target","FormContainer","xs","md","CreateScreen","setName","setTitle","setDescription","createDiscussion","placeholder","LoginScreen","location","loginUsername","setLoginUsername","loginPassword","setLoginPassword","redirect","search","split","password","setItem","stringify","RegisterScreen","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","required","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.caac4219.chunk.js","sourcesContent":["export const DISCUSSION_LIST_REQUEST = 'DISCUSSION_LIST_REQUEST'\r\nexport const DISCUSSION_LIST_SUCCESS = 'DISCUSSION_LIST_SUCCESS'\r\nexport const DISCUSSION_LIST_FAIL = 'DISCUSSION_LIST_FAIL'\r\n\r\nexport const DISCUSSION_CREATE_REQUEST = 'DISCUSSION_CREATE_REQUEST'\r\nexport const DISCUSSION_CREATE_SUCCESS = 'DISCUSSION_CREATE_SUCCESS'\r\nexport const DISCUSSION_CREATE_FAIL = 'DISCUSSION_CREATE_FAIL'\r\nexport const DISCUSSION_CREATE_RESET = \"DISCUSSION_CREATE_RESET\"\r\n\r\n\r\nexport const D_LIST_REQUEST = 'D_LIST_REQUEST'\r\nexport const D_LIST_SUCCESS = 'D_LIST_SUCCESS'\r\nexport const D_LIST_FAIL = 'D_LIST_FAIL'\r\nexport const D_LIST_RESET= \"D_LIST_RESET\"\r\n\r\nexport const D_REPLY_REQUEST = 'D_REPLY_REQUEST'\r\nexport const D_REPLY_SUCCESS = 'D_REPLY_SUCCESS'\r\nexport const D_REPLY_FAIL = 'D_REPLY_FAIL'\r\nexport const D_REPLY_RESET= \"D_REPLY_RESET\"","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\n\r\nexport const USER_LOGOUT = \"USER_LOGIN_LOGOUT\"\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n","import { createStore, combineReducers , applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {discussionListReducer , dListReducer , dReplyReducer} from \"./reducers/discussionReducer\"\r\nimport {discussionCreateReducer } from './reducers/discussionReducer'\r\nimport {userRegisterReducer , userLoginReducer} from \"./reducers/userReducer\"\r\n\r\n\r\nconst reducer = combineReducers({\r\n    discussionList:discussionListReducer,\r\n    discussionCreate:discussionCreateReducer,\r\n    userRegister:userRegisterReducer,\r\n    userLogin :userLoginReducer,\r\n    dList:dListReducer,\r\n    dReply:dReplyReducer\r\n})\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')):null\r\nconst initialState={\r\n    userLogin :{userInfo: userInfoFromStorage}\r\n}\r\nconst store = createStore(reducer,initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { DISCUSSION_LIST_REQUEST , DISCUSSION_LIST_SUCCESS , DISCUSSION_LIST_FAIL  , DISCUSSION_CREATE_REQUEST , DISCUSSION_CREATE_SUCCESS , DISCUSSION_CREATE_FAIL , DISCUSSION_CREATE_RESET ,D_LIST_FAIL , D_LIST_REQUEST , D_LIST_SUCCESS, D_LIST_RESET ,D_REPLY_RESET,D_REPLY_FAIL , D_REPLY_SUCCESS , D_REPLY_REQUEST } from '../constants/discussionConstants'\r\n\r\n\r\nexport const discussionListReducer=( state={discussions:[]},action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case DISCUSSION_LIST_REQUEST:\r\n            return{loading:true , discussions:[]}\r\n        \r\n         case DISCUSSION_LIST_SUCCESS:\r\n            return{loading:false , discussions:action.payload}\r\n\r\n        case DISCUSSION_LIST_FAIL:\r\n            return{loading:false , error:action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const discussionCreateReducer=( state={},action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case DISCUSSION_CREATE_REQUEST:\r\n            return{loading:true ,...state}\r\n        \r\n         case DISCUSSION_CREATE_SUCCESS:\r\n            return{loading:false , success:true}\r\n\r\n        case DISCUSSION_CREATE_FAIL:\r\n            return{loading:false , error:action.payload}\r\n\r\n        case DISCUSSION_CREATE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const dListReducer=( state={d:[]},action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case D_LIST_REQUEST:\r\n            return{loading:true }\r\n        \r\n         case D_LIST_SUCCESS:\r\n            return{loading:false , success:true , d:action.payload}\r\n\r\n        case D_LIST_FAIL:\r\n            return{loading:false , error:action.payload}\r\n\r\n        case D_LIST_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const dReplyReducer=( state={},action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case D_REPLY_REQUEST:\r\n            return{loading:true }\r\n        \r\n         case D_REPLY_SUCCESS:\r\n            return{loading:false , success:true}\r\n\r\n        case D_REPLY_FAIL:\r\n            return{loading:false , error:action.payload}\r\n\r\n        case D_REPLY_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { USER_REGISTER_REQUEST , USER_REGISTER_SUCCESS ,USER_REGISTER_FAIL, USER_LOGIN_SUCCESS , USER_LOGIN_REQUEST , USER_LOGIN_FAIL, USER_LOGOUT} from '../constants/userConstants'\r\n\r\n\r\n\r\nexport const userRegisterReducer = (state={},action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case USER_REGISTER_SUCCESS:\r\n            return{loading:false, success:true}\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false,error:action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return{}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userLoginReducer = (state={}, action)=>\r\n{\r\n    {\r\n        switch(action.type)\r\n        {\r\n            case USER_LOGIN_REQUEST:\r\n                return {loading:true}\r\n            \r\n            case USER_LOGIN_SUCCESS:\r\n                return{loading:false, success:true , userInfo:action.payload}\r\n    \r\n            case USER_LOGIN_FAIL:\r\n                return {loading:false,error:action.payload}\r\n\r\n            case USER_LOGOUT:\r\n                return{}\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Container , Row , Col } from 'react-bootstrap'\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; K-Discussions\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Navbar , Nav, Container , NavDropdown  } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {LinkContainer} from \"react-router-bootstrap\"\r\nimport {logout} from \"../actions/userAction\"\r\n\r\n\r\nfunction Header() {\r\n\r\n   \r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    const logoutHandler=()=>\r\n    {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect>\r\n               <Container>\r\n                   <LinkContainer to=\"/\">\r\n                      <Navbar.Brand>K-Discussions</Navbar.Brand>\r\n                   </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            \r\n                            {userInfo? (\r\n                                        \r\n                                    <NavDropdown title={userInfo.username} id='username'>\r\n\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                    </NavDropdown>\r\n                                        \r\n\r\n                                    \r\n                                ) : (\r\n                                        <LinkContainer to='/login'>\r\n                                            <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                        </LinkContainer>\r\n                                    )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n               </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\nimport { USER_REGISTER_REQUEST , USER_REGISTER_SUCCESS ,USER_REGISTER_FAIL , USER_LOGIN_REQUEST, USER_LOGIN_FAIL , USER_LOGIN_SUCCESS  ,USER_LOGOUT} from '../constants/userConstants'\r\n\r\n\r\n\r\n\r\nexport const register = (username , password)=> async(dispatch)=>\r\n{\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n\r\n        await axios.post(\"/api/register\", {'username':username , 'password':password})\r\n\r\n        dispatch(\r\n            {\r\n                type:USER_REGISTER_SUCCESS\r\n            }\r\n        )\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n               ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (username , password)=> async(dispatch)=>\r\n{\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const {data}=await axios.post(\"/api/login\", {'username':username , 'password':password})\r\n\r\n        dispatch(\r\n            {\r\n                type:USER_LOGIN_SUCCESS,\r\n                payload:data\r\n            }\r\n        )\r\n\r\n        \r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n               ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=()=>(dispatch)=>\r\n{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch(\r\n        {\r\n            type:USER_LOGOUT\r\n        } \r\n    )\r\n}","import React from 'react'\r\nimport {Badge, Card } from \"react-bootstrap\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Discussions({d}) {\r\n\r\n\r\n\r\n    return (\r\n            <Card className=\"my-3\">\r\n                <Card.Header style={{color:\"white\"}}><Badge pill variant=\"success\"><h6>Author: {d.name}</h6></Badge>{\" \"}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Topic: <Badge variant=\"dark\">{d.title}</Badge></Card.Title>\r\n                    <Card.Text style={{color:\"white\"}}>\r\n                        {d.description}\r\n                    </Card.Text>\r\n\r\n                    <Link to={`/reply/${d._id}`} className='btn btn-light my-3'>See Replies</Link>\r\n                </Card.Body>\r\n\r\n            </Card>\r\n      \r\n    )\r\n}\r\n\r\nexport default Discussions\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nfunction Loader() {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\" style={{height:'100px', width:'100px',margin:'auto' , display:'block'}}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React,{useEffect , useState} from 'react'\r\nimport { Button, Row , Col , Card, ListGroup} from 'react-bootstrap'\r\nimport {useDispatch , useSelector} from \"react-redux\"\r\nimport { listDiscussions } from '../actions/discussionAction'\r\nimport Discussions from '../components/Discussions'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nfunction DiscussionScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const discussionList = useSelector(state=>state.discussionList)\r\n    const { error , loading , discussions} = discussionList\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        dispatch(listDiscussions())\r\n    },[dispatch])\r\n\r\n    const createHandler=()=>{\r\n        if(userInfo)\r\n        {\r\n        history.push(\"/create\")\r\n        }\r\n        else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Discussion Forum</h1>\r\n            <Row className=\"text-center\">\r\n                <Col>\r\n                    <Button variant=\"light\" size=\"lg\" onClick={createHandler}>\r\n                        CREATE A NEW DISCUSSION\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading? <Loader/>:(\r\n                   <ListGroup variant=\"flush\">\r\n                   {discussions.map(d=>(\r\n                           <ListGroup.Item>\r\n                               <Discussions d={d}/>\r\n                           </ListGroup.Item>\r\n                       ))}\r\n                </ListGroup>\r\n            )}\r\n          \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiscussionScreen\r\n","import axios from 'axios'\r\nimport { DISCUSSION_LIST_REQUEST , DISCUSSION_LIST_SUCCESS , DISCUSSION_LIST_FAIL , DISCUSSION_CREATE_REQUEST , DISCUSSION_CREATE_SUCCESS , DISCUSSION_CREATE_FAIL , D_LIST_FAIL , D_LIST_REQUEST , D_LIST_SUCCESS , D_REPLY_FAIL , D_REPLY_SUCCESS , D_REPLY_REQUEST } from '../constants/discussionConstants'\r\n\r\n\r\nexport const listDiscussions =()=> async(dispatch)=>\r\n{\r\n    try{\r\n        dispatch({\r\n            type:DISCUSSION_LIST_REQUEST\r\n        })\r\n        const {data} = await axios.get(\"/api/discussions\")\r\n        dispatch({\r\n            type:DISCUSSION_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:DISCUSSION_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n               ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createDiscussion =(name , title, description)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:DISCUSSION_CREATE_REQUEST\r\n        })\r\n\r\n        await axios.post(\"/api/discussions\" , {'name':name , 'title':title,'description':description})\r\n        dispatch({\r\n            type:DISCUSSION_CREATE_SUCCESS,\r\n        })\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:DISCUSSION_CREATE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n               ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listD = (id)=>async(dispatch)=>\r\n{\r\n    try{\r\n        dispatch({\r\n            type:D_LIST_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.get(`/api/discussion/${id}`)\r\n\r\n        dispatch({\r\n            type:D_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:D_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n               ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const ReplyD = (id , reply, name)=>async(dispatch)=>\r\n{\r\n    try{\r\n        dispatch({\r\n            type:D_REPLY_REQUEST\r\n        })\r\n\r\n        await axios.post(`/api/discussion/${id}`,{'reply':reply , \"replier\":name})\r\n\r\n        dispatch({\r\n            type:D_REPLY_SUCCESS\r\n        })\r\n    }\r\n    catch(error)\r\n    {\r\n        dispatch({\r\n            type:D_REPLY_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n               ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nfunction Message({variant , children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React,{useEffect, useState} from 'react'\r\nimport { Button, Row , Col , Card, Form, ListGroup , Badge} from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\"\r\nimport {listD , ReplyD} from \"../actions/discussionAction\"\r\nimport Discussions from \"../components/Discussions\"\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport  {D_REPLY_RESET} from \"../constants/discussionConstants\"\r\nimport Loader from '../components/Loader'\r\nimport Message from \"../components/Message\"\r\n\r\nfunction ReplyScreen({match}) {\r\n\r\n    const [comment , setComment]= useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const dList = useSelector(state=>state.dList)\r\n    const {success ,d} = dList\r\n\r\n    const dReply = useSelector(state=>state.dReply)\r\n    const { success: replySuccess} = dReply\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n\r\n    const{userInfo} = userLogin\r\n\r\n\r\n\r\n    useEffect(()=>\r\n    {\r\n        if(replySuccess)\r\n        {\r\n            setComment(\"\")\r\n            dispatch({\r\n                type:D_REPLY_RESET\r\n            })\r\n        }\r\n        dispatch(listD(match.params.id))\r\n\r\n    },[dispatch ,match , replySuccess])\r\n\r\n    const submitHandler=(e)=>\r\n    {\r\n        e.preventDefault()\r\n        dispatch(ReplyD( match.params.id , comment,userInfo.username))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {success?(\r\n            <div>\r\n                <Card className=\"my-3\">\r\n                    <Card.Header style={{color:\"white\"}}><Badge pill variant=\"success\"><h6>Author: {d.name}</h6></Badge>{\" \"}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Topic: <Badge variant=\"dark\">{d.title}</Badge></Card.Title>\r\n                        <Card.Text style={{color:\"white\"}}>\r\n                            {d.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <h1>Replies</h1>\r\n                    {d.replies.map((reply) => (\r\n                        <div class=\"card p-3\">\r\n                        <div class=\"d-flex justify-content-between align-items-center\">\r\n                            <div class=\"user d-flex flex-row align-items-center\"><span><small class=\"font-weight-bold text-primary\">{reply.replier}</small> <small class=\"font-weight-bold\">{reply.reply}</small></span> </div> \r\n                        </div>\r\n\r\n                    </div>\r\n                    ))}\r\n                </ListGroup>\r\n                {userInfo ? (\r\n                     <Form onSubmit={submitHandler}>               \r\n                     <Form.Group controlId='reply'>        \r\n                         <Form.Label>Shoot a reply</Form.Label>\r\n                         <Form.Control\r\n                             as='textarea'\r\n                             row='5'\r\n                             value={comment}\r\n                             onChange={(e) => setComment(e.target.value)}\r\n                         ></Form.Control>\r\n                     </Form.Group>\r\n \r\n                     <Button\r\n                         type='submit'\r\n                         variant='primary'\r\n                     >\r\n                         Submit\r\n                     </Button>\r\n                 </Form>\r\n                ):( <Message variant='info'>Please <Link to='/login'>login</Link> to reply</Message>)}\r\n               \r\n            </div>\r\n\r\n            ):(<Loader/>)}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ReplyScreen","import React from 'react'\r\nimport {Container , Row ,Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState , useEffect } from 'react'\r\nimport { Form , Button } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {createDiscussion} from '../actions/discussionAction'\r\nimport { useSelector , useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from \"../components/Message\"\r\nimport {DISCUSSION_CREATE_RESET} from '../constants/discussionConstants'\r\n\r\nfunction CreateScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const discussionCreate = useSelector(state=>state.discussionCreate)\r\n    const{loading , error , success} = discussionCreate\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const{userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({type:DISCUSSION_CREATE_RESET})\r\n\r\n        if(success)\r\n        {\r\n            history.push(\"/\")\r\n        }\r\n    }, [history , success,dispatch , userInfo])\r\n\r\n    const submitHandler=(e)=>\r\n    {\r\n        e.preventDefault()\r\n        if(userInfo)\r\n        {\r\n        dispatch(createDiscussion(name,title,description))\r\n        }\r\n        else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <FormContainer>\r\n                <h1>Create A Discussion</h1>\r\n                    <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e)=>setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='title'>\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control\r\n                                    type='title'\r\n                                    placeholder='Enter title'\r\n                                    value={title}\r\n                                    onChange={(e)=>setTitle(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" row={5}\r\n                                    value={description}\r\n                                    onChange={(e)=>setDescription(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create\r\n                        </Button>\r\n\r\n                    </Form>\r\n            </FormContainer >\r\n            \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateScreen\r\n","import React , {useState , useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row , Col , Form , Button  } from 'react-bootstrap'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport axios from \"axios\"\r\nimport { login } from '../actions/userAction'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction LoginScreen({location , history}) {\r\n    const [loginUsername, setLoginUsername] = useState('')\r\n    const [loginPassword, setLoginPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(loginUsername,loginPassword))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            {}\r\n            <h1>Login In</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='username'>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                        type='username'\r\n                        placeholder='Enter name'\r\n                        value={loginUsername}\r\n                        onChange={(e) => setLoginUsername(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={loginPassword}\r\n                        onChange={(e) => setLoginPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                \r\n                <Button type='submit' variant='primary'>\r\n                    Login In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New User? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","\r\nimport React,{useState,useEffect} from 'react'\r\nimport {Form, Row , Col , Button} from 'react-bootstrap'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {register} from \"../actions/userAction\"\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction RegisterScreen({location,history}) {\r\n\r\n    const [registerUsername , setRegisterUsername] = useState('')\r\n    const [registerPassword , setRegisterPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, success } = userRegister\r\n\r\n   \r\n    useEffect(() => {\r\n\r\n        if(success)\r\n        {\r\n            history.push(\"/login\")\r\n        }\r\n    }, [history ,success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(register(registerUsername,registerPassword))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n                <h1>Register</h1>\r\n                \r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='username'>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='username'\r\n                            placeholder='Enter name'\r\n                            value={registerUsername}\r\n                            onChange={(e) => setRegisterUsername(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={registerPassword}\r\n                            onChange={(e) => setRegisterPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Register\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        Have an Account? <Link\r\n                            to=\"/login\">\r\n                            Sign In\r\n                            </Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router , Route } from 'react-router-dom'\n\nimport Footer from \"./components/Footer\"\nimport Header from './components/Header';\nimport DiscussionScreen from './Screens/DiscussionScreen'\nimport ReplyScreen from './Screens/ReplyScreen'\nimport CreateScreen from './Screens/CreateScreen'\nimport LoginScreen from './Screens/LoginScreen'\nimport RegisterScreen from './Screens/RegisterScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={DiscussionScreen} exact/>\n          <Route path=\"/reply/:id\" component={ReplyScreen} />\n          <Route path=\"/create\" component={CreateScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}